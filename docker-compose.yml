

networks:
  microservices_net:
    driver: bridge

services:
  # Primera instancia del user-service
  user-service-1:
    build: ./user-service
    ports:
      - "5000:5000"
    volumes:
      - ./user-service/users.db:/app/users.db
    networks:
      - microservices_net
    environment:
      - FLASK_ENV=production
      - INSTANCE_ID=1

  # Segunda instancia del user-service
  user-service-2:
    build: ./user-service
    ports:
      - "5002:5000"  # Puerto diferente para la segunda instancia
    volumes:
      - ./user-service/users.db:/app/users.db
    networks:
      - microservices_net
    environment:
      - FLASK_ENV=production
      - INSTANCE_ID=2

  # Primera instancia del task-service
  task-service-1:
    build: ./task-service
    ports:
      - "5001:5001"
    environment:
      - USER_SERVICE_URL=http://user-service-1:5000,http://user-service-2:5000
      - FLASK_ENV=production
      - INSTANCE_ID=1
    volumes:
      - ./task-service/db:/app/db
    depends_on:
      - user-service-1
      - user-service-2
    networks:
      - microservices_net

  # Segunda instancia del task-service
  task-service-2:
    build: ./task-service
    ports:
      - "5003:5001"  # Puerto diferente para la segunda instancia
    environment:
      - USER_SERVICE_URL=http://user-service-1:5000,http://user-service-2:5000
      - FLASK_ENV=production
      - INSTANCE_ID=2
    volumes:
      - ./task-service/db:/app/db
    depends_on:
      - user-service-1
      - user-service-2
    networks:
      - microservices_net

  # Nginx proxy con load balancing
  nginx-proxy:
    build: ./nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./admin:/usr/share/nginx/html/admin
      - ./nginx-proxy/logs:/var/log/nginx  # Para logs de balanceador
    depends_on:
      - user-service-1
      - user-service-2
      - task-service-1
      - task-service-2
    networks:
      - microservices_net
    restart: unless-stopped
