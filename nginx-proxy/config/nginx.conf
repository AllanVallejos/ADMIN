worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    server_tokens off;

    # Upstreams para microservicios
    upstream user_service {
        server user-service:5000;
    }

    upstream task_service {
        server task-service:5001;
    }

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;

        # Configuración de logs
        access_log /var/log/nginx/access.log combined;
        error_log  /var/log/nginx/error.log warn;

        # Redirección /admin → /admin/
        location = /admin {
            return 301 /admin/;
        }

        # Servir archivos estáticos de /admin (CON LA MODIFICACIÓN CSP)
        location /admin/ {
            alias /usr/share/nginx/html/admin/;
            index index.html;
            try_files $uri $uri/ /admin/index.html;

            # Configuración MIME types
            types {
                text/html html;
                text/css css;
                application/javascript js;
            }

            # Headers de seguridad (MODIFICADO PARA PERMITIR INLINE)
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "DENY";
            add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'";
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API Users - ruta exacta sin barra
        location = /api/users {
            rewrite ^/api/users$ /users break;
            proxy_pass http://user_service/users;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_intercept_errors on;
            error_page 502 503 504 = @api_error;
        }

        # API Users - todas las rutas que empiezan con /api/users/
        location /api/users/ {
            rewrite ^/api/users/(.*)$ /users/$1 break;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_intercept_errors on;
            error_page 502 503 504 = @api_error;
        }

        # API Tasks - ruta exacta sin barra
        location = /api/tasks {
            rewrite ^/api/tasks$ /tasks break;
            proxy_pass http://task_service/tasks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API Tasks - todas las rutas que empiezan con /api/tasks/
        location /api/tasks/ {
            rewrite ^/api/tasks/?(.*)$ /tasks/$1 break;
            proxy_pass http://task_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Archivos estáticos
        location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff2)$ {
            expires 30d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }

        # Manejo de errores
        location @api_error {
            default_type application/json;
            return 503 '{"status":503,"message":"Service Temporarily Unavailable"}';
        }

        # Ruta raíz
        location / {
            default_type application/json;
            return 404 '{"error": "Not Found", "endpoints": [
                "/api/users/",
                "/api/tasks/",
                "/admin/"
            ]}';
        }
    }
}